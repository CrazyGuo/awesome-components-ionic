{"version":3,"sources":["default~pages-angular-material-components-expansion-expansion-module~pages-angular-material-componen~5af9c64a-es5.js","webpack:///node_modules/@angular/cdk/esm2015/a11y.js","webpack:///node_modules/@angular/cdk/esm2015/keycodes.js","webpack:///node_modules/@angular/cdk/esm2015/observers.js"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"default~pages-angular-material-components-expansion-expansion-module~pages-angular-material-componen~5af9c64a\"],{\n\n/***/ \"./node_modules/@angular/cdk/esm2015/a11y.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/@angular/cdk/esm2015/a11y.js ***!\n  \\***************************************************/\n/*! exports provided: ARIA_DESCRIBER_PROVIDER_FACTORY, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_PROVIDER_FACTORY, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_DEFAULT_OPTIONS, FOCUS_MONITOR_PROVIDER_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ARIA_DESCRIBER_PROVIDER_FACTORY\", function() { return ARIA_DESCRIBER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MESSAGES_CONTAINER_ID\", function() { return MESSAGES_CONTAINER_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CDK_DESCRIBEDBY_ID_PREFIX\", function() { return CDK_DESCRIBEDBY_ID_PREFIX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CDK_DESCRIBEDBY_HOST_ATTRIBUTE\", function() { return CDK_DESCRIBEDBY_HOST_ATTRIBUTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AriaDescriber\", function() { return AriaDescriber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ARIA_DESCRIBER_PROVIDER\", function() { return ARIA_DESCRIBER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveDescendantKeyManager\", function() { return ActiveDescendantKeyManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusKeyManager\", function() { return FocusKeyManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListKeyManager\", function() { return ListKeyManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusTrap\", function() { return FocusTrap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusTrapFactory\", function() { return FocusTrapFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CdkTrapFocus\", function() { return CdkTrapFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InteractivityChecker\", function() { return InteractivityChecker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_PROVIDER_FACTORY\", function() { return LIVE_ANNOUNCER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LiveAnnouncer\", function() { return LiveAnnouncer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CdkAriaLive\", function() { return CdkAriaLive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_PROVIDER\", function() { return LIVE_ANNOUNCER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY\", function() { return LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_ELEMENT_TOKEN\", function() { return LIVE_ANNOUNCER_ELEMENT_TOKEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_DEFAULT_OPTIONS\", function() { return LIVE_ANNOUNCER_DEFAULT_OPTIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FOCUS_MONITOR_PROVIDER_FACTORY\", function() { return FOCUS_MONITOR_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TOUCH_BUFFER_MS\", function() { return TOUCH_BUFFER_MS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusMonitor\", function() { return FocusMonitor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CdkMonitorFocus\", function() { return CdkMonitorFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FOCUS_MONITOR_PROVIDER\", function() { return FOCUS_MONITOR_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFakeMousedownFromScreenReader\", function() { return isFakeMousedownFromScreenReader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A11yModule\", function() { return A11yModule; });\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/keycodes */ \"./node_modules/@angular/cdk/esm2015/keycodes.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm2015/operators/index.js\");\n/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/platform */ \"./node_modules/@angular/cdk/esm2015/platform.js\");\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/coercion */ \"./node_modules/@angular/cdk/esm2015/coercion.js\");\n/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/observers */ \"./node_modules/@angular/cdk/esm2015/observers.js\");\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"],] }] }\n];\n/** @nocollapse */ AriaDescriber.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function AriaDescriber_Factory() { return new AriaDescriber(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"])); }, token: AriaDescriber, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"SkipSelf\"](), AriaDescriber],\n        (/** @type {?} */ (_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"]))\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subject\"]();\n        this._typeaheadSubscription = rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subscription\"].EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subject\"]();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subject\"]();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"QueryList\"]) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"tap\"])((/**\n         * @param {?} keyCode\n         * @return {?}\n         */\n        keyCode => (/** @type {?} */ (this))._pressedLetters.push(keyCode))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"debounceTime\"])(debounceInterval), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"filter\"])((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"map\"])((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"TAB\"]:\n                this.tabOut.next();\n                return;\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"DOWN_ARROW\"]:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"UP_ARROW\"]:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"RIGHT_ARROW\"]:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"LEFT_ARROW\"]:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"hasModifierKey\"])(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"A\"] && keyCode <= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"Z\"]) || (keyCode >= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"ZERO\"] && keyCode <= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[\"NINE\"])) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    updateActiveItemIndex(index) {\n        this.updateActiveItem(index);\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"QueryList\"] ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"Platform\"] }\n];\n/** @nocollapse */ InteractivityChecker.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"Platform\"])); }, token: InteractivityChecker, providedIn: \"root\" });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"isDevMode\"])() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"take\"])(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"],] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(InteractivityChecker), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"])); }, token: FocusTrapFactory, providedIn: \"root\" });\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[\"coerceBooleanProperty\"])(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[\"coerceBooleanProperty\"])(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"], args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus',\n            },] },\n];\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"] },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"],] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], args: ['cdkTrapFocusAutoCapture',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"InjectionToken\"]('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"InjectionToken\"]('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"],] }] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"], args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive',\n            },] },\n];\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"] },\n    { type: LiveAnnouncer },\n    { type: _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_7__[\"ContentObserver\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], args: ['cdkAriaLive',] }]\n};\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentAnnouncer\n * @param {?} liveElement\n * @param {?} _document\n * @param {?} ngZone\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentAnnouncer, liveElement, _document, ngZone) {\n    return parentAnnouncer || new LiveAnnouncer(liveElement, ngZone, _document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"SkipSelf\"](), LiveAnnouncer],\n        [new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"](LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        _angular_common__WEBPACK_IMPORTED_MODULE_0__[\"DOCUMENT\"],\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"],\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"normalizePassiveListenerOptions\"])({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"of\"])(null);\n        }\n        /** @type {?} */\n        const nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[\"coerceElement\"])(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subject\"]()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[\"coerceElement\"])(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[\"coerceElement\"])(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            this._originTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._origin = null), 1);\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"Platform\"] }\n];\n/** @nocollapse */ FocusMonitor.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function FocusMonitor_Factory() { return new FocusMonitor(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"Platform\"])); }, token: FocusMonitor, providedIn: \"root\" });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"], args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n            },] },\n];\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"] },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"] }]\n};\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"SkipSelf\"](), FocusMonitor], _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"Platform\"]],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n}\nA11yModule.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"], args: [{\n                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__[\"CommonModule\"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__[\"PlatformModule\"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_7__[\"ObserversModule\"]],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n//# sourceMappingURL=a11y.js.map\n\n\n/***/ }),\n\n/***/ \"./node_modules/@angular/cdk/esm2015/keycodes.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/@angular/cdk/esm2015/keycodes.js ***!\n  \\*******************************************************/\n/*! exports provided: MAC_ENTER, BACKSPACE, TAB, NUM_CENTER, ENTER, SHIFT, CONTROL, ALT, PAUSE, CAPS_LOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, PLUS_SIGN, PRINT_SCREEN, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, FF_SEMICOLON, FF_EQUALS, QUESTION_MARK, AT_SIGN, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, CONTEXT_MENU, NUMPAD_ZERO, NUMPAD_ONE, NUMPAD_TWO, NUMPAD_THREE, NUMPAD_FOUR, NUMPAD_FIVE, NUMPAD_SIX, NUMPAD_SEVEN, NUMPAD_EIGHT, NUMPAD_NINE, NUMPAD_MULTIPLY, NUMPAD_PLUS, NUMPAD_MINUS, NUMPAD_PERIOD, NUMPAD_DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, FIRST_MEDIA, FF_MINUS, MUTE, VOLUME_DOWN, VOLUME_UP, FF_MUTE, FF_VOLUME_DOWN, LAST_MEDIA, FF_VOLUME_UP, SEMICOLON, EQUALS, COMMA, DASH, SLASH, APOSTROPHE, TILDE, OPEN_SQUARE_BRACKET, BACKSLASH, CLOSE_SQUARE_BRACKET, SINGLE_QUOTE, MAC_META, hasModifierKey */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAC_ENTER\", function() { return MAC_ENTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACKSPACE\", function() { return BACKSPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TAB\", function() { return TAB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_CENTER\", function() { return NUM_CENTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENTER\", function() { return ENTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHIFT\", function() { return SHIFT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTROL\", function() { return CONTROL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ALT\", function() { return ALT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAUSE\", function() { return PAUSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CAPS_LOCK\", function() { return CAPS_LOCK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ESCAPE\", function() { return ESCAPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACE\", function() { return SPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAGE_UP\", function() { return PAGE_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAGE_DOWN\", function() { return PAGE_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"END\", function() { return END; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HOME\", function() { return HOME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEFT_ARROW\", function() { return LEFT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UP_ARROW\", function() { return UP_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIGHT_ARROW\", function() { return RIGHT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOWN_ARROW\", function() { return DOWN_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PLUS_SIGN\", function() { return PLUS_SIGN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRINT_SCREEN\", function() { return PRINT_SCREEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INSERT\", function() { return INSERT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DELETE\", function() { return DELETE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZERO\", function() { return ZERO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ONE\", function() { return ONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TWO\", function() { return TWO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"THREE\", function() { return THREE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FOUR\", function() { return FOUR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FIVE\", function() { return FIVE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SIX\", function() { return SIX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SEVEN\", function() { return SEVEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EIGHT\", function() { return EIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NINE\", function() { return NINE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FF_SEMICOLON\", function() { return FF_SEMICOLON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FF_EQUALS\", function() { return FF_EQUALS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QUESTION_MARK\", function() { return QUESTION_MARK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AT_SIGN\", function() { return AT_SIGN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return A; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return B; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return C; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return D; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return E; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return F; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return G; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H\", function() { return H; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I\", function() { return I; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"J\", function() { return J; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"K\", function() { return K; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L\", function() { return L; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"M\", function() { return M; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"N\", function() { return N; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"O\", function() { return O; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"P\", function() { return P; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Q\", function() { return Q; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R\", function() { return R; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"S\", function() { return S; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"T\", function() { return T; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"U\", function() { return U; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"V\", function() { return V; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W\", function() { return W; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"X\", function() { return X; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Y\", function() { return Y; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Z\", function() { return Z; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"META\", function() { return META; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAC_WK_CMD_LEFT\", function() { return MAC_WK_CMD_LEFT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAC_WK_CMD_RIGHT\", function() { return MAC_WK_CMD_RIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTEXT_MENU\", function() { return CONTEXT_MENU; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_ZERO\", function() { return NUMPAD_ZERO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_ONE\", function() { return NUMPAD_ONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_TWO\", function() { return NUMPAD_TWO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_THREE\", function() { return NUMPAD_THREE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_FOUR\", function() { return NUMPAD_FOUR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_FIVE\", function() { return NUMPAD_FIVE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_SIX\", function() { return NUMPAD_SIX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_SEVEN\", function() { return NUMPAD_SEVEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_EIGHT\", function() { return NUMPAD_EIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_NINE\", function() { return NUMPAD_NINE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_MULTIPLY\", function() { return NUMPAD_MULTIPLY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_PLUS\", function() { return NUMPAD_PLUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_MINUS\", function() { return NUMPAD_MINUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_PERIOD\", function() { return NUMPAD_PERIOD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMPAD_DIVIDE\", function() { return NUMPAD_DIVIDE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F1\", function() { return F1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F2\", function() { return F2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F3\", function() { return F3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F4\", function() { return F4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F5\", function() { return F5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F6\", function() { return F6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F7\", function() { return F7; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F8\", function() { return F8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F9\", function() { return F9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F10\", function() { return F10; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F11\", function() { return F11; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F12\", function() { return F12; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_LOCK\", function() { return NUM_LOCK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCROLL_LOCK\", function() { return SCROLL_LOCK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FIRST_MEDIA\", function() { return FIRST_MEDIA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FF_MINUS\", function() { return FF_MINUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MUTE\", function() { return MUTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOLUME_DOWN\", function() { return VOLUME_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOLUME_UP\", function() { return VOLUME_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FF_MUTE\", function() { return FF_MUTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FF_VOLUME_DOWN\", function() { return FF_VOLUME_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LAST_MEDIA\", function() { return LAST_MEDIA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FF_VOLUME_UP\", function() { return FF_VOLUME_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SEMICOLON\", function() { return SEMICOLON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUALS\", function() { return EQUALS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMMA\", function() { return COMMA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DASH\", function() { return DASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLASH\", function() { return SLASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"APOSTROPHE\", function() { return APOSTROPHE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TILDE\", function() { return TILDE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OPEN_SQUARE_BRACKET\", function() { return OPEN_SQUARE_BRACKET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACKSLASH\", function() { return BACKSLASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLOSE_SQUARE_BRACKET\", function() { return CLOSE_SQUARE_BRACKET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SINGLE_QUOTE\", function() { return SINGLE_QUOTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAC_META\", function() { return MAC_META; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasModifierKey\", function() { return hasModifierKey; });\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n//# sourceMappingURL=keycodes.js.map\n\n\n/***/ }),\n\n/***/ \"./node_modules/@angular/cdk/esm2015/observers.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/@angular/cdk/esm2015/observers.js ***!\n  \\********************************************************/\n/*! exports provided: MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MutationObserverFactory\", function() { return MutationObserverFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentObserver\", function() { return ContentObserver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CdkObserveContent\", function() { return CdkObserveContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObserversModule\", function() { return ObserversModule; });\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/cdk/coercion */ \"./node_modules/@angular/cdk/esm2015/coercion.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm2015/operators/index.js\");\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ MutationObserverFactory.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__[\"coerceElement\"])(elementOrRef);\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"]((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subject\"]();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"], args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function ContentObserver_Factory() { return new ContentObserver(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__[\"coerceBooleanProperty\"])(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__[\"coerceNumberProperty\"])(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"debounceTime\"])(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"], args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent',\n            },] },\n];\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"], args: ['cdkObserveContent',] }],\n    disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"] }]\n};\nclass ObserversModule {\n}\nObserversModule.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"], args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n//# sourceMappingURL=observers.js.map\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=default~pages-angular-material-components-expansion-expansion-module~pages-angular-material-componen~5af9c64a-es2015.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, SkipSelf, QueryList, Directive, ElementRef, Input, NgZone, isDevMode, InjectionToken, EventEmitter, Output, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { debounceTime, filter, map, tap, take } from 'rxjs/operators';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ngInjectableDef = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new Optional(), new SkipSelf(), AriaDescriber],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} keyCode\n         * @return {?}\n         */\n        keyCode => (/** @type {?} */ (this))._pressedLetters.push(keyCode))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    updateActiveItemIndex(index) {\n        this.updateActiveItem(index);\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ngInjectableDef = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus',\n            },] },\n];\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ngInjectableDef = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive',\n            },] },\n];\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentAnnouncer\n * @param {?} liveElement\n * @param {?} _document\n * @param {?} ngZone\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentAnnouncer, liveElement, _document, ngZone) {\n    return parentAnnouncer || new LiveAnnouncer(liveElement, ngZone, _document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n        NgZone,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            this._originTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._origin = null), 1);\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ FocusMonitor.ngInjectableDef = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n            },] },\n];\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n}\nA11yModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ARIA_DESCRIBER_PROVIDER_FACTORY, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_PROVIDER_FACTORY, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_DEFAULT_OPTIONS, FOCUS_MONITOR_PROVIDER_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n//# sourceMappingURL=a11y.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MAC_ENTER, BACKSPACE, TAB, NUM_CENTER, ENTER, SHIFT, CONTROL, ALT, PAUSE, CAPS_LOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, PLUS_SIGN, PRINT_SCREEN, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, FF_SEMICOLON, FF_EQUALS, QUESTION_MARK, AT_SIGN, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, CONTEXT_MENU, NUMPAD_ZERO, NUMPAD_ONE, NUMPAD_TWO, NUMPAD_THREE, NUMPAD_FOUR, NUMPAD_FIVE, NUMPAD_SIX, NUMPAD_SEVEN, NUMPAD_EIGHT, NUMPAD_NINE, NUMPAD_MULTIPLY, NUMPAD_PLUS, NUMPAD_MINUS, NUMPAD_PERIOD, NUMPAD_DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, FIRST_MEDIA, FF_MINUS, MUTE, VOLUME_DOWN, VOLUME_UP, FF_MUTE, FF_VOLUME_DOWN, LAST_MEDIA, FF_VOLUME_UP, SEMICOLON, EQUALS, COMMA, DASH, SLASH, APOSTROPHE, TILDE, OPEN_SQUARE_BRACKET, BACKSLASH, CLOSE_SQUARE_BRACKET, SINGLE_QUOTE, MAC_META, hasModifierKey };\n//# sourceMappingURL=keycodes.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ MutationObserverFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent',\n            },] },\n];\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\nclass ObserversModule {\n}\nObserversModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.js.map\n"]}